name: Build and deploy ASP.Net Core app to an Azure Web App

env:
  AZURE_WEBAPP_NAME: Wildfire-Website-App    # name of your Azure Web App
  DOTNET_VERSION: '9.0'                      # .NET version
  PROJECT_PATH: './project_wildfire/project_wildfire_web' # exact path to .csproj folder
  PUBLISH_PATH: './myapp'                    # output folder for dotnet publish

on:
  push:
    branches: [ main ]  # <- replace with your default branch if different
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build ./project_wildfire/project_wildfire_web/project_wildfire_web.csproj --configuration Release
    
      - name: Publish with dotnet
        run: dotnet publish ./project_wildfire/project_wildfire_web/project_wildfire_web.csproj -c Release -o ./myapp


      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-app
          path: ${{ env.PUBLISH_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: none
    environment:
      name: 'Development'  # or 'Development' depending on your config
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-app
          path: dotnet-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: dotnet-app  # match the folder created by the upload/download
