@using Microsoft.AspNetCore.Identity
@using project_wildfire_web.DAL.Abstract

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IUserRepository UserRepository

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    var identityUser = UserManager.GetUserAsync(User).Result;
    var userEmail = UserManager.GetEmailAsync(identityUser).Result;
    var primaryUser = UserRepository.GetUserByIdAsync(identityUser.Id).Result;

    <li class="nav-item">
        @if (primaryUser.FirstName != null)
        {
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @primaryUser.FirstName!</a>
        }
        else
        {
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @userEmail!</a>
        }
        
    </li>
    <li class="nav-item">
    <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
        asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })"
        method="post">
        <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
    </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
