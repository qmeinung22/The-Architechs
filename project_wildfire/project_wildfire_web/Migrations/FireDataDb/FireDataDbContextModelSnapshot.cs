// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using project_wildfire_web.Models;

#nullable disable

namespace project_wildfire_web.Migrations.FireDataDb
{
    [DbContext(typeof(FireDataDbContext))]
    partial class FireDataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserFireSubscription", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FireId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "FireId")
                        .HasName("PK__UserFire__499520ED71B18F01");

                    b.HasIndex("FireId");

                    b.ToTable("UserFireSubscriptions", (string)null);
                });

            modelBuilder.Entity("project_wildfire_web.Models.AqiStation", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StationId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.ToTable("AqiStations");
                });

            modelBuilder.Entity("project_wildfire_web.Models.Fire", b =>
                {
                    b.Property<int>("FireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FireId"));

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(8, 6)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9, 6)");

                    b.Property<Geometry>("Polygon")
                        .HasColumnType("geography");

                    b.Property<decimal?>("RadiativePower")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("FireId")
                        .HasName("PK__Fires__E1DECA144C64F9FF");

                    b.ToTable("Fires");
                });

            modelBuilder.Entity("project_wildfire_web.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("ContrastMode")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FontSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TextToSpeech")
                        .HasColumnType("bit");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C60961939");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("project_wildfire_web.Models.UserLocation", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(8, 6)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9, 6)");

                    b.Property<int>("NotificationRadius")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("UserId");

                    b.ToTable("UserLocations");
                });

            modelBuilder.Entity("project_wildfire_web.Models.UserPreferences", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("ContrastMode")
                        .HasColumnType("boolean");

                    b.Property<string>("FontSize")
                        .IsRequired()
                        .HasColumnType("string");

                    b.Property<bool>("TextToSpeech")
                        .HasColumnType("boolean");

                    b.HasKey("UserId");

                    b.ToTable("UserPreferences");
                });

            modelBuilder.Entity("UserFireSubscription", b =>
                {
                    b.HasOne("project_wildfire_web.Models.Fire", null)
                        .WithMany()
                        .HasForeignKey("FireId")
                        .IsRequired()
                        .HasConstraintName("FK_UserFireSubscriptions_Fires");

                    b.HasOne("project_wildfire_web.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserFireSubscriptions_Users");
                });

            modelBuilder.Entity("project_wildfire_web.Models.UserLocation", b =>
                {
                    b.HasOne("project_wildfire_web.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserLocations_Users");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
